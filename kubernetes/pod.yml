apiVersion: v1
kind: Pod
metadata:
  name: secret-env-pod
  labels:
    app: app-name
spec:
  serviceAccountName: default # mount token in /var/run/secrets/kubernetes.io/serviceaccount/token
  #
  ## POD SCHEDULING
  priorityClassName: high-priority # refer to a PriorityClass object, default in k8s are system-cluster-critical < system-node-critical
  nodeSelector:
    node-role.kubernetes.io/master: ''
  tolerations:
    - effect: NoSchedule
      key: node-role.kubernetes.io/master
      operator: Exists
  topologySpreadConstraints: # EvenPodsSpread fg. Can be defaulted in KubeSchedulerConfiguration (DefaultPodTopologySpread fg)
    - maxSkew: 1             # max distribution diff (eg: 3 pods zone1, 1 pod zone2 = 3 - 1 = 2)
      topologyKey: zone      # key of node labels
      whenUnsatisfiable: DoNotSchedule # or ScheduleAnyway
      labelSelector:         # key of node labels
        matchLabels:
          foo: bar
    - maxSkew: 1
      topologyKey: node  # spread among nodes
      labelSelector:
        matchLabels:
          foo: bar
  affinity:
    podAntiAffinity:                              # rule to force one pod per node
      requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
              - {key: app, operator: In, values: [app-name]}
          topologyKey: kubernetes.io/hostname # spread among nodes
  #
  ## CONTAINERS
initContainers: # hack to make configmap editable
- image: alpine:3.18.2
  name: init
  command: 
  - /bin/bash
  - -c
  - |
    #!/bin/bash
    cp /tmp/custom.config.php /opt/conf-files/custom.config.php
  volumeMounts:
  - name: nextcloud-config
    mountPath: /tmp
  - name: conf-files
    mountPath: /opt/conf-files

  containers:
  - name: mycontainer
    image: busybox:latest
    imagePullPolicy: IfNotPresent # Kubelet skips pulling an image if it already exists
    lifecycle: # execute command before launching container entrypoint
      postStart:
        exec:
          command:
            - /bin/sh
            - -c
            - |
              chown -R www-data:www-data /var/www/html
    envFrom:
    - secretRef:
        name: s3-share-secrets    # Name of the Secret resource, secret must be created via k create secret --from-en-file=path
    volumeMounts:
    - name: mysecret              # Secret volume mount, mounted secret file is always READ-ONLY 
      mountPath: "/etc/foo"
    - name: config-volumne
      mountPath: /etc/fluentd-config/custom.config  # use full path to write only 1 file CONFIGMAP will always be READ-ONLY
      subPath: custom.config                        # use subPath to write only 1 file CONFIGMAP will always be READ-ONLY
    env:
      - name: API_URL             # inline env variable
        value: "https://lb.ocplab.example.priv"
      - name: SECRET_USERNAME
        valueFrom:                # Secret env mount
          secretKeyRef:
            name: mysecret
            key: username
    ports:
    - containerPort: 80
      protocol: TCP
    livenessProbe:           # livenessProbe, set startupProbe for low starting containers, kubelet kills the container and restarts it if failure
      httpGet:
        path: /healthz       # success if code between 200 and 399
        port: 80
        httpHeaders:
        - name: Custom-Header
          value: Awesome
      initialDelaySeconds: 3  # Start probing after x seconds
      failureThreshold: 1     # Tolerate one failure
      periodSeconds: 3        # Probe every x seconds
    readinessProbe:           # A pod with containers not ready does not receive traffic through Kubernetes Services
      exec:
        command:
        - cat
        - /tmp/healthy
      initialDelaySeconds: 5
      periodSeconds: 5
  #
  ## STORAGE
  volumes:
  - name: foo                     # Secret volume
    secret:
      secretName: mysecret
      items:
      - key: username
        path: my-group/my-username
        mode: 511
  - name: config-volume           # ConfigMap mount
    configMap:
      name: fluentd-config
  - name: varlog                  # Volume emptyDir, can be shared between containers
    emptyDir:
      sizeLimit: 1000Mi
  - name: host-root-volume  	    # Volume, share directory with the node host
    hostPath:
      path: /
  - name: projected-volume
    projected: # compile multiple source in one dir
      sources:
      - configMap:
        name: nsx-ncp-config
        items:
          - {key: ncp.ini, path: ncp.ini}
      - secret:
        name: lb-secret
        items:
        - {key: tls.crt, path: lb-cert/tls.crt}
        - {key: tls.key, path: lb-cert/tls.key}
  restartPolicy: Never
